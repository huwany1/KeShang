limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

map $http_origin $cors_origin {
  default "";
  ~^https?://localhost(:\d+)?$ $http_origin;
  ~^https?://127\.0\.0\.1(:\d+)?$ $http_origin;
}

events {}
http {
  server {
    listen 8080;

    # CORS
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
    add_header Access-Control-Allow-Credentials "true" always;

    if ($request_method = OPTIONS) {
      return 204;
    }

    # Rate limit
    limit_req zone=api burst=20 nodelay;

    # 简化后的服务前缀：直接保留下游服务自身 prefix
    location /auth/ {
      proxy_pass http://auth_service:8001;
    }
    location /documents/ {
      proxy_pass http://document_service:8002;
    }
    location /knowledge/ {
      proxy_pass http://knowledge_service:8003;
    }
    location /questions/ {
      proxy_pass http://question_service:8004;
    }
    location /ws/ {
      proxy_pass http://realtime_service:8005;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # 精准路由健康与版本，避免因 prefix 变化导致 404
    location = /auth/health {
      proxy_pass http://auth_service:8001/health;
    }
    location = /auth/version {
      proxy_pass http://auth_service:8001/version;
    }
    location = /documents/health {
      proxy_pass http://document_service:8002/health;
    }
    location = /documents/version {
      proxy_pass http://document_service:8002/version;
    }
    location = /knowledge/health {
      proxy_pass http://knowledge_service:8003/health;
    }
    location = /knowledge/version {
      proxy_pass http://knowledge_service:8003/version;
    }
    location = /questions/health {
      proxy_pass http://question_service:8004/health;
    }
    location = /questions/version {
      proxy_pass http://question_service:8004/version;
    }
    location = /realtime/health {
      proxy_pass http://realtime_service:8005/health;
    }
    location = /realtime/version {
      proxy_pass http://realtime_service:8005/version;
    }
  }
}
